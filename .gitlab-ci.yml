# Docker image used in CI/CD.
# Look for the different tagged releases at:
# https://hub.docker.com/r/cypress/browsers/tags?page=1&ordering=last_updated
image: cypress/browsers:node14.16.0-chrome90-ff88

# This folder is cached between builds
# http://docs.gitlab.com/ce/ci/yaml/README.html#cache
cache:
  untracked: true
  key: '$CI_JOB_NAME-$CI_COMMIT_REF_SLUG'
  paths:
    - node_modules/

# before running anything.
# Docker images come with yarn preinstalled, no need to run this as of yet
# before_script:

# You specify the stages. Those are the steps that GitLab will go through
# Order matters.
stages:
  - ui-tests-mol-desktop
  - update-percy-from-dev-mol-desktop
  - ui-tests-mol-mobile
  - update-percy-from-dev-mol-mobile
  - ui-tests-mod
  - update-percy-from-dev-mod
  - ui-tests-vms
  - update-percy-from-dev-vms
  - ui-tests-mok
  - update-percy-from-dev-mok
  - ui-tests-utils
  - minimally-one-successful-merge-train
  - deploy

################ mol desktop ################

'MOL Desktop Percy > Cypress': #only run this if MOL desktop components are changed or tests are changed
  before_script:
    # used only in CI, thus using npm to install instead of yarn
    - npm install wait-on http-server -g
  stage: ui-tests-mol-desktop
  script:
    - yarn install
    - rm -rf ui_components/MOL/mobile ui_components/VMS ui_components/MOD ui_components/MOK ui_components/utils
    - yarn run build-storybook
    # script below uses wait-on and http-server, installed above using before_script
    - yarn run run-storybook-build-ci & wait-on http://localhost:6006
    #- yarn run is-cypress-working
    - yarn run cypress-run-mol-desktop
    - yarn run percy-in-ci-mol-desktop
  only:
    refs:
      - merge_requests
    changes:
      - ui_components/MOL/desktop/**/*.{js,json}
      - cypress/integration/mol-desktop/**/*.js
      #- .gitlab-ci.yml # uncomment when you need this to run on this pipeline
      #- package.json

'Update MOL Desktop Percy':
  stage: update-percy-from-dev-mol-desktop
  script:
    - yarn install
    - rm -rf ui_components/MOL/mobile ui_components/VMS ui_components/MOD ui_components/MOK ui_components/utils
    - yarn run build-storybook
    - yarn run percy-in-ci-mol-desktop
  only:
    refs:
      - dev
    changes:
      - ui_components/MOL/desktop/**/*.{js,json}
      #- .gitlab-ci.yml # uncomment when you need this to run on this pipeline
      #- package.json

################ mol mobile ################

'MOL Mobile Percy > Cypress': #only run this stage if MOL mobile components are changed or tests are changed
  before_script:
    # used only in CI, thus using npm to install instead of yarn
    - npm install wait-on http-server -g
  stage: ui-tests-mol-mobile
  script:
    - yarn install
    - rm -rf ui_components/MOL/desktop ui_components/VMS ui_components/MOD ui_components/MOK ui_components/utils
    - yarn run build-storybook
    # script below uses wait-on and http-server, installed above using before_script
    - yarn run run-storybook-build-ci & wait-on http://localhost:6006
    #- yarn run is-cypress-working
    - yarn run cypress-run-mol-mobile
    - yarn run percy-in-ci-mol-mobile
  only:
    refs:
      - merge_requests
    changes:
      - ui_components/MOL/mobile/**/*.{js,json}
      - cypress/integration/mol-mobile/**/*.js
      #- .gitlab-ci.yml # uncomment when you need this to run on this pipeline
      #- package.json

'Update MOL Mobile Percy':
  stage: update-percy-from-dev-mol-mobile
  script:
    - yarn install
    - rm -rf ui_components/MOL/desktop ui_components/VMS ui_components/MOD ui_components/MOK ui_components/utils
    - yarn run build-storybook
    - yarn run percy-in-ci-mol-mobile
  only:
    refs:
      - dev
    changes:
      - ui_components/MOL/mobile/**/*.{js,json}
      #- .gitlab-ci.yml # uncomment when you need this to run on this pipeline
      #- package.json

################ mod ################

'MOD Percy > Cypress': #only run this stage if MOL mobile components are changed or tests are changed
  before_script:
    # used only in CI, thus using npm to install instead of yarn
    - npm install wait-on http-server -g
  stage: ui-tests-mod
  script:
    - yarn install
    - rm -rf ui_components/MOL/desktop ui_components/MOL/mobile ui_components/VMS ui_components/MOK ui_components/utils
    - yarn run build-storybook
    # script below uses wait-on and http-server, installed above using before_script
    - yarn run run-storybook-build-ci & wait-on http://localhost:6006
    #- yarn run is-cypress-working
    - yarn run cypress-run-mod
    - yarn run percy-in-ci-mod
  only:
    refs:
      - merge_requests
    changes:
      - ui_components/MOD/**/*.{js,json}
      - cypress/integration/mod/**/*.js
      #- .gitlab-ci.yml # uncomment when you need this to run on this pipeline
      #- package.json

'Update MOD Percy':
  stage: update-percy-from-dev-mod
  script:
    - yarn install
    - rm -rf ui_components/MOL/desktop ui_components/MOL/mobile ui_components/VMS ui_components/MOK ui_components/utils
    - yarn run build-storybook
    - yarn run percy-in-ci-mod
  only:
    refs:
      - dev
    changes:
      - ui_components/MOD/**/*.{js,json}
      #- .gitlab-ci.yml # uncomment when you need this to run on this pipeline
      #- package.json

################ vms ################

'VMS Percy > Cypress': #only run this stage if MOL mobile components are changed or tests are changed
  before_script:
    # used only in CI, thus using npm to install instead of yarn
    - npm install wait-on http-server -g
  stage: ui-tests-vms
  script:
    - yarn install
    - rm -rf ui_components/MOL/desktop ui_components/MOL/mobile ui_components/MOD ui_components/MOK ui_components/utils
    - yarn run build-storybook
    # script below uses wait-on and http-server, installed above using before_script
    - yarn run run-storybook-build-ci & wait-on http://localhost:6006
    #- yarn run is-cypress-working
    - yarn run cypress-run-vms
    - yarn run percy-in-ci-vms
  only:
    refs:
      - merge_requests
    changes:
      - ui_components/VMS/**/*.{js,json}
      - cypress/integration/vms/**/*.js
      #- .gitlab-ci.yml # uncomment when you need this to run on this pipeline
      #- package.json

'Update VMS Percy':
  stage: update-percy-from-dev-vms
  script:
    - yarn install
    - rm -rf ui_components/MOL/desktop ui_components/MOL/mobile ui_components/MOD ui_components/MOK ui_components/utils
    - yarn run build-storybook
    - yarn run percy-in-ci-vms
  only:
    refs:
      - dev
    changes:
      - ui_components/VMS/**/*.{js,json}
      #- .gitlab-ci.yml # uncomment when you need this to run on this pipeline
      #- package.json

################ mok ################

'MOK Percy > Cypress': #only run this stage if MOK components are changed or tests are changed
  before_script:
    # used only in CI, thus using npm to install instead of yarn
    - npm install wait-on http-server -g
  stage: ui-tests-mok
  script:
    - yarn install
    - rm -rf ui_components/MOL/desktop ui_components/MOL/mobile ui_components/MOD ui_components/VMS ui_components/utils
    - yarn run build-storybook
    # script below uses wait-on and http-server, installed above using before_script
    - yarn run run-storybook-build-ci & wait-on http://localhost:6006
    #- yarn run is-cypress-working
    - yarn run cypress-run-mok
    - yarn run percy-in-ci-mok

  only:
    refs:
      - merge_requests
    changes:
      - ui_components/MOK/**/*.{js,json}
      - cypress/integration/mok/**/*.js
      #- .gitlab-ci.yml # uncomment when you need this to run on this pipeline
      #- package.json

'Update MOK Percy':
  stage: update-percy-from-dev-mok
  script:
    - yarn install
    - rm -rf ui_components/MOL/desktop ui_components/MOL/mobile ui_components/MOD ui_components/VMS ui_components/utils
    - yarn run build-storybook
    - yarn run percy-in-ci-mok
  only:
    refs:
      - dev
    changes:
      - ui_components/MOK/**/*.{js,json}
      #- .gitlab-ci.yml # uncomment when you need this to run on this pipeline

################ utils ################

'utils Cypress': #only run this stage if MOL mobile components are changed or tests are changed
  before_script:
    # used only in CI, thus using npm to install instead of yarn
    - npm install wait-on http-server -g
  stage: ui-tests-utils
  script:
    - yarn install
    - yarn run build-storybook
    # script below uses wait-on and http-server, installed above using before_script
    - yarn run run-storybook-build-ci & wait-on http://localhost:6006
    #- yarn run is-cypress-working
    - yarn run cypress-run-utils
  only:
    refs:
      - merge_requests
    changes:
      - ui_components/utils/**/*.{js,json}
      - cypress/integration/utils/**/*.js
      #- .gitlab-ci.yml # uncomment when you need this to run on this pipeline
      #- package.json

'Minimally One Successful Merge train':
  image: alpine
  stage: minimally-one-successful-merge-train
  only:
    refs:
      - merge_requests
  script:
    - echo go

'pages': #never change name from "pages" or this won't deploy to pages
  stage: deploy
  script:
    - yarn run build-storybook
    - rm -r public/*
    - mv built_storybook/* public
  artifacts:
    paths:
      - public
  only:
    - master
